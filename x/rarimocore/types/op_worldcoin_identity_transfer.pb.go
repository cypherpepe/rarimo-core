// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rarimocore/op_worldcoin_identity_transfer.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type WorldCoinIdentityTransfer struct {
	Contract string `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	Chain    string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	// Hex 0x uint256
	State string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	// Dec uint256
	Timestamp string `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (m *WorldCoinIdentityTransfer) Reset()         { *m = WorldCoinIdentityTransfer{} }
func (m *WorldCoinIdentityTransfer) String() string { return proto.CompactTextString(m) }
func (*WorldCoinIdentityTransfer) ProtoMessage()    {}
func (*WorldCoinIdentityTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a897c477db0590c9, []int{0}
}
func (m *WorldCoinIdentityTransfer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WorldCoinIdentityTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WorldCoinIdentityTransfer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WorldCoinIdentityTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorldCoinIdentityTransfer.Merge(m, src)
}
func (m *WorldCoinIdentityTransfer) XXX_Size() int {
	return m.Size()
}
func (m *WorldCoinIdentityTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_WorldCoinIdentityTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_WorldCoinIdentityTransfer proto.InternalMessageInfo

func (m *WorldCoinIdentityTransfer) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *WorldCoinIdentityTransfer) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

func (m *WorldCoinIdentityTransfer) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *WorldCoinIdentityTransfer) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func init() {
	proto.RegisterType((*WorldCoinIdentityTransfer)(nil), "rarimo.rarimocore.rarimocore.WorldCoinIdentityTransfer")
}

func init() {
	proto.RegisterFile("rarimocore/op_worldcoin_identity_transfer.proto", fileDescriptor_a897c477db0590c9)
}

var fileDescriptor_a897c477db0590c9 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2f, 0x4a, 0x2c, 0xca,
	0xcc, 0xcd, 0x4f, 0xce, 0x2f, 0x4a, 0xd5, 0xcf, 0x2f, 0x88, 0x2f, 0xcf, 0x2f, 0xca, 0x49, 0x49,
	0xce, 0xcf, 0xcc, 0x8b, 0xcf, 0x4c, 0x49, 0xcd, 0x2b, 0xc9, 0x2c, 0xa9, 0x8c, 0x2f, 0x29, 0x4a,
	0xcc, 0x2b, 0x4e, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x81, 0x68, 0xd0,
	0x43, 0xe8, 0x43, 0x62, 0x2a, 0x35, 0x32, 0x72, 0x49, 0x86, 0x83, 0xcc, 0x70, 0xce, 0xcf, 0xcc,
	0xf3, 0x84, 0x1a, 0x11, 0x02, 0x35, 0x41, 0x48, 0x8a, 0x8b, 0x23, 0x39, 0x3f, 0xaf, 0xa4, 0x28,
	0x31, 0xb9, 0x44, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xce, 0x17, 0x12, 0xe1, 0x62, 0x4d,
	0xce, 0x48, 0xcc, 0xcc, 0x93, 0x60, 0x02, 0x4b, 0x40, 0x38, 0x20, 0xd1, 0xe2, 0x92, 0xc4, 0x92,
	0x54, 0x09, 0x66, 0x88, 0x28, 0x98, 0x23, 0x24, 0xc3, 0xc5, 0x59, 0x92, 0x99, 0x9b, 0x5a, 0x5c,
	0x92, 0x98, 0x5b, 0x20, 0xc1, 0x02, 0x96, 0x41, 0x08, 0x38, 0x79, 0x9d, 0x78, 0x24, 0xc7, 0x78,
	0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31, 0x5c, 0x78, 0x2c, 0xc7,
	0x70, 0xe3, 0xb1, 0x1c, 0x43, 0x94, 0x41, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e,
	0x2e, 0xd4, 0xdf, 0x50, 0x4a, 0x17, 0xec, 0xff, 0x0a, 0xe4, 0xc0, 0x28, 0xa9, 0x2c, 0x48, 0x2d,
	0x4e, 0x62, 0x03, 0x7b, 0xda, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x22, 0xd5, 0x3e, 0x1d, 0x27,
	0x01, 0x00, 0x00,
}

func (m *WorldCoinIdentityTransfer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WorldCoinIdentityTransfer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WorldCoinIdentityTransfer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Timestamp) > 0 {
		i -= len(m.Timestamp)
		copy(dAtA[i:], m.Timestamp)
		i = encodeVarintOpWorldcoinIdentityTransfer(dAtA, i, uint64(len(m.Timestamp)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintOpWorldcoinIdentityTransfer(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintOpWorldcoinIdentityTransfer(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Contract) > 0 {
		i -= len(m.Contract)
		copy(dAtA[i:], m.Contract)
		i = encodeVarintOpWorldcoinIdentityTransfer(dAtA, i, uint64(len(m.Contract)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintOpWorldcoinIdentityTransfer(dAtA []byte, offset int, v uint64) int {
	offset -= sovOpWorldcoinIdentityTransfer(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *WorldCoinIdentityTransfer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Contract)
	if l > 0 {
		n += 1 + l + sovOpWorldcoinIdentityTransfer(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovOpWorldcoinIdentityTransfer(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovOpWorldcoinIdentityTransfer(uint64(l))
	}
	l = len(m.Timestamp)
	if l > 0 {
		n += 1 + l + sovOpWorldcoinIdentityTransfer(uint64(l))
	}
	return n
}

func sovOpWorldcoinIdentityTransfer(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozOpWorldcoinIdentityTransfer(x uint64) (n int) {
	return sovOpWorldcoinIdentityTransfer(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *WorldCoinIdentityTransfer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOpWorldcoinIdentityTransfer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WorldCoinIdentityTransfer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WorldCoinIdentityTransfer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOpWorldcoinIdentityTransfer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOpWorldcoinIdentityTransfer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOpWorldcoinIdentityTransfer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOpWorldcoinIdentityTransfer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOpWorldcoinIdentityTransfer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOpWorldcoinIdentityTransfer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOpWorldcoinIdentityTransfer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOpWorldcoinIdentityTransfer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOpWorldcoinIdentityTransfer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOpWorldcoinIdentityTransfer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOpWorldcoinIdentityTransfer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthOpWorldcoinIdentityTransfer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOpWorldcoinIdentityTransfer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthOpWorldcoinIdentityTransfer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipOpWorldcoinIdentityTransfer(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOpWorldcoinIdentityTransfer
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOpWorldcoinIdentityTransfer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOpWorldcoinIdentityTransfer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthOpWorldcoinIdentityTransfer
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupOpWorldcoinIdentityTransfer
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthOpWorldcoinIdentityTransfer
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthOpWorldcoinIdentityTransfer        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOpWorldcoinIdentityTransfer          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupOpWorldcoinIdentityTransfer = fmt.Errorf("proto: unexpected end of group")
)
