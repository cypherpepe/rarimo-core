// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rarimocore/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	types "gitlab.com/rarimo/rarimo-core/x/tokenmanager/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateTransferOp struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// Information to identify transfer
	Tx      string `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	EventId string `protobuf:"bytes,3,opt,name=eventId,proto3" json:"eventId,omitempty"`
	// Information about deposit
	Receiver   string `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount     string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	BundleData string `protobuf:"bytes,6,opt,name=bundleData,proto3" json:"bundleData,omitempty"`
	BundleSalt string `protobuf:"bytes,7,opt,name=bundleSalt,proto3" json:"bundleSalt,omitempty"`
	// Information about current and target chains
	From *types.ItemChainParams `protobuf:"bytes,8,opt,name=from,proto3" json:"from,omitempty"`
	To   *types.ItemChainParams `protobuf:"bytes,9,opt,name=to,proto3" json:"to,omitempty"`
	// Information about token
	Item *types.ItemIndex    `protobuf:"bytes,10,opt,name=item,proto3" json:"item,omitempty"`
	Meta *types.ItemMetadata `protobuf:"bytes,11,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (m *MsgCreateTransferOp) Reset()         { *m = MsgCreateTransferOp{} }
func (m *MsgCreateTransferOp) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransferOp) ProtoMessage()    {}
func (*MsgCreateTransferOp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{0}
}
func (m *MsgCreateTransferOp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransferOp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransferOp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransferOp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransferOp.Merge(m, src)
}
func (m *MsgCreateTransferOp) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransferOp) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransferOp.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransferOp proto.InternalMessageInfo

func (m *MsgCreateTransferOp) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTransferOp) GetTx() string {
	if m != nil {
		return m.Tx
	}
	return ""
}

func (m *MsgCreateTransferOp) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *MsgCreateTransferOp) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *MsgCreateTransferOp) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *MsgCreateTransferOp) GetBundleData() string {
	if m != nil {
		return m.BundleData
	}
	return ""
}

func (m *MsgCreateTransferOp) GetBundleSalt() string {
	if m != nil {
		return m.BundleSalt
	}
	return ""
}

func (m *MsgCreateTransferOp) GetFrom() *types.ItemChainParams {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *MsgCreateTransferOp) GetTo() *types.ItemChainParams {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *MsgCreateTransferOp) GetItem() *types.ItemIndex {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *MsgCreateTransferOp) GetMeta() *types.ItemMetadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

type MsgCreateTransferOpResponse struct {
}

func (m *MsgCreateTransferOpResponse) Reset()         { *m = MsgCreateTransferOpResponse{} }
func (m *MsgCreateTransferOpResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransferOpResponse) ProtoMessage()    {}
func (*MsgCreateTransferOpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{1}
}
func (m *MsgCreateTransferOpResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransferOpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransferOpResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransferOpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransferOpResponse.Merge(m, src)
}
func (m *MsgCreateTransferOpResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransferOpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransferOpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransferOpResponse proto.InternalMessageInfo

type MsgCreateConfirmation struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// hex-encoded
	Root    string   `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
	Indexes []string `protobuf:"bytes,3,rep,name=indexes,proto3" json:"indexes,omitempty"`
	// hex-encoded
	SignatureECDSA string `protobuf:"bytes,4,opt,name=signatureECDSA,proto3" json:"signatureECDSA,omitempty"`
}

func (m *MsgCreateConfirmation) Reset()         { *m = MsgCreateConfirmation{} }
func (m *MsgCreateConfirmation) String() string { return proto.CompactTextString(m) }
func (*MsgCreateConfirmation) ProtoMessage()    {}
func (*MsgCreateConfirmation) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{2}
}
func (m *MsgCreateConfirmation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateConfirmation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateConfirmation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateConfirmation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateConfirmation.Merge(m, src)
}
func (m *MsgCreateConfirmation) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateConfirmation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateConfirmation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateConfirmation proto.InternalMessageInfo

func (m *MsgCreateConfirmation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateConfirmation) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

func (m *MsgCreateConfirmation) GetIndexes() []string {
	if m != nil {
		return m.Indexes
	}
	return nil
}

func (m *MsgCreateConfirmation) GetSignatureECDSA() string {
	if m != nil {
		return m.SignatureECDSA
	}
	return ""
}

type MsgCreateConfirmationResponse struct {
}

func (m *MsgCreateConfirmationResponse) Reset()         { *m = MsgCreateConfirmationResponse{} }
func (m *MsgCreateConfirmationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateConfirmationResponse) ProtoMessage()    {}
func (*MsgCreateConfirmationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{3}
}
func (m *MsgCreateConfirmationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateConfirmationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateConfirmationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateConfirmationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateConfirmationResponse.Merge(m, src)
}
func (m *MsgCreateConfirmationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateConfirmationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateConfirmationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateConfirmationResponse proto.InternalMessageInfo

type MsgCreateChangePartiesOp struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	NewSet       []*Party `protobuf:"bytes,2,rep,name=newSet,proto3" json:"newSet,omitempty"`
	NewPublicKey string   `protobuf:"bytes,3,opt,name=newPublicKey,proto3" json:"newPublicKey,omitempty"`
	Signature    string   `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *MsgCreateChangePartiesOp) Reset()         { *m = MsgCreateChangePartiesOp{} }
func (m *MsgCreateChangePartiesOp) String() string { return proto.CompactTextString(m) }
func (*MsgCreateChangePartiesOp) ProtoMessage()    {}
func (*MsgCreateChangePartiesOp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{4}
}
func (m *MsgCreateChangePartiesOp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateChangePartiesOp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateChangePartiesOp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateChangePartiesOp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateChangePartiesOp.Merge(m, src)
}
func (m *MsgCreateChangePartiesOp) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateChangePartiesOp) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateChangePartiesOp.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateChangePartiesOp proto.InternalMessageInfo

func (m *MsgCreateChangePartiesOp) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateChangePartiesOp) GetNewSet() []*Party {
	if m != nil {
		return m.NewSet
	}
	return nil
}

func (m *MsgCreateChangePartiesOp) GetNewPublicKey() string {
	if m != nil {
		return m.NewPublicKey
	}
	return ""
}

func (m *MsgCreateChangePartiesOp) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type MsgCreateChangePartiesOpResponse struct {
}

func (m *MsgCreateChangePartiesOpResponse) Reset()         { *m = MsgCreateChangePartiesOpResponse{} }
func (m *MsgCreateChangePartiesOpResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateChangePartiesOpResponse) ProtoMessage()    {}
func (*MsgCreateChangePartiesOpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{5}
}
func (m *MsgCreateChangePartiesOpResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateChangePartiesOpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateChangePartiesOpResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateChangePartiesOpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateChangePartiesOpResponse.Merge(m, src)
}
func (m *MsgCreateChangePartiesOpResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateChangePartiesOpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateChangePartiesOpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateChangePartiesOpResponse proto.InternalMessageInfo

type MsgSetupInitial struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PartyPublicKey string `protobuf:"bytes,2,opt,name=partyPublicKey,proto3" json:"partyPublicKey,omitempty"`
	NewPublicKey   string `protobuf:"bytes,3,opt,name=newPublicKey,proto3" json:"newPublicKey,omitempty"`
}

func (m *MsgSetupInitial) Reset()         { *m = MsgSetupInitial{} }
func (m *MsgSetupInitial) String() string { return proto.CompactTextString(m) }
func (*MsgSetupInitial) ProtoMessage()    {}
func (*MsgSetupInitial) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{6}
}
func (m *MsgSetupInitial) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetupInitial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetupInitial.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetupInitial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetupInitial.Merge(m, src)
}
func (m *MsgSetupInitial) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetupInitial) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetupInitial.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetupInitial proto.InternalMessageInfo

func (m *MsgSetupInitial) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetupInitial) GetPartyPublicKey() string {
	if m != nil {
		return m.PartyPublicKey
	}
	return ""
}

func (m *MsgSetupInitial) GetNewPublicKey() string {
	if m != nil {
		return m.NewPublicKey
	}
	return ""
}

type MsgSetupInitialResponse struct {
}

func (m *MsgSetupInitialResponse) Reset()         { *m = MsgSetupInitialResponse{} }
func (m *MsgSetupInitialResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetupInitialResponse) ProtoMessage()    {}
func (*MsgSetupInitialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{7}
}
func (m *MsgSetupInitialResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetupInitialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetupInitialResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetupInitialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetupInitialResponse.Merge(m, src)
}
func (m *MsgSetupInitialResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetupInitialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetupInitialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetupInitialResponse proto.InternalMessageInfo

type MsgChangePartyAddress struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	NewAddress string `protobuf:"bytes,2,opt,name=newAddress,proto3" json:"newAddress,omitempty"`
}

func (m *MsgChangePartyAddress) Reset()         { *m = MsgChangePartyAddress{} }
func (m *MsgChangePartyAddress) String() string { return proto.CompactTextString(m) }
func (*MsgChangePartyAddress) ProtoMessage()    {}
func (*MsgChangePartyAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{8}
}
func (m *MsgChangePartyAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgChangePartyAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgChangePartyAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgChangePartyAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgChangePartyAddress.Merge(m, src)
}
func (m *MsgChangePartyAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgChangePartyAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgChangePartyAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgChangePartyAddress proto.InternalMessageInfo

func (m *MsgChangePartyAddress) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgChangePartyAddress) GetNewAddress() string {
	if m != nil {
		return m.NewAddress
	}
	return ""
}

type MsgChangePartyAddressResponse struct {
}

func (m *MsgChangePartyAddressResponse) Reset()         { *m = MsgChangePartyAddressResponse{} }
func (m *MsgChangePartyAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgChangePartyAddressResponse) ProtoMessage()    {}
func (*MsgChangePartyAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{9}
}
func (m *MsgChangePartyAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgChangePartyAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgChangePartyAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgChangePartyAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgChangePartyAddressResponse.Merge(m, src)
}
func (m *MsgChangePartyAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgChangePartyAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgChangePartyAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgChangePartyAddressResponse proto.InternalMessageInfo

type MsgResignOperation struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// index of change op that was accepted on block X where operation to resign was accepted on X >= block >= X - Params.availableResignBlockDelta
	ChangeOpIndex string `protobuf:"bytes,2,opt,name=changeOpIndex,proto3" json:"changeOpIndex,omitempty"`
	// index of operation to be resigned
	OpIndex string `protobuf:"bytes,3,opt,name=opIndex,proto3" json:"opIndex,omitempty"`
}

func (m *MsgResignOperation) Reset()         { *m = MsgResignOperation{} }
func (m *MsgResignOperation) String() string { return proto.CompactTextString(m) }
func (*MsgResignOperation) ProtoMessage()    {}
func (*MsgResignOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{10}
}
func (m *MsgResignOperation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgResignOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgResignOperation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgResignOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgResignOperation.Merge(m, src)
}
func (m *MsgResignOperation) XXX_Size() int {
	return m.Size()
}
func (m *MsgResignOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgResignOperation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgResignOperation proto.InternalMessageInfo

func (m *MsgResignOperation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgResignOperation) GetChangeOpIndex() string {
	if m != nil {
		return m.ChangeOpIndex
	}
	return ""
}

func (m *MsgResignOperation) GetOpIndex() string {
	if m != nil {
		return m.OpIndex
	}
	return ""
}

type MsgResignOperationResponse struct {
}

func (m *MsgResignOperationResponse) Reset()         { *m = MsgResignOperationResponse{} }
func (m *MsgResignOperationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgResignOperationResponse) ProtoMessage()    {}
func (*MsgResignOperationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{11}
}
func (m *MsgResignOperationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgResignOperationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgResignOperationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgResignOperationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgResignOperationResponse.Merge(m, src)
}
func (m *MsgResignOperationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgResignOperationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgResignOperationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgResignOperationResponse proto.InternalMessageInfo

type MsgVote struct {
	Creator   string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Operation string   `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	Vote      VoteType `protobuf:"varint,3,opt,name=vote,proto3,enum=rarimo.rarimocore.rarimocore.VoteType" json:"vote,omitempty"`
}

func (m *MsgVote) Reset()         { *m = MsgVote{} }
func (m *MsgVote) String() string { return proto.CompactTextString(m) }
func (*MsgVote) ProtoMessage()    {}
func (*MsgVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{12}
}
func (m *MsgVote) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVote.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVote.Merge(m, src)
}
func (m *MsgVote) XXX_Size() int {
	return m.Size()
}
func (m *MsgVote) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVote.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVote proto.InternalMessageInfo

func (m *MsgVote) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgVote) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *MsgVote) GetVote() VoteType {
	if m != nil {
		return m.Vote
	}
	return VoteType_YES
}

type MsgVoteResponse struct {
}

func (m *MsgVoteResponse) Reset()         { *m = MsgVoteResponse{} }
func (m *MsgVoteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgVoteResponse) ProtoMessage()    {}
func (*MsgVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9dffb74ddf0d475, []int{13}
}
func (m *MsgVoteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteResponse.Merge(m, src)
}
func (m *MsgVoteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateTransferOp)(nil), "rarimo.rarimocore.rarimocore.MsgCreateTransferOp")
	proto.RegisterType((*MsgCreateTransferOpResponse)(nil), "rarimo.rarimocore.rarimocore.MsgCreateTransferOpResponse")
	proto.RegisterType((*MsgCreateConfirmation)(nil), "rarimo.rarimocore.rarimocore.MsgCreateConfirmation")
	proto.RegisterType((*MsgCreateConfirmationResponse)(nil), "rarimo.rarimocore.rarimocore.MsgCreateConfirmationResponse")
	proto.RegisterType((*MsgCreateChangePartiesOp)(nil), "rarimo.rarimocore.rarimocore.MsgCreateChangePartiesOp")
	proto.RegisterType((*MsgCreateChangePartiesOpResponse)(nil), "rarimo.rarimocore.rarimocore.MsgCreateChangePartiesOpResponse")
	proto.RegisterType((*MsgSetupInitial)(nil), "rarimo.rarimocore.rarimocore.MsgSetupInitial")
	proto.RegisterType((*MsgSetupInitialResponse)(nil), "rarimo.rarimocore.rarimocore.MsgSetupInitialResponse")
	proto.RegisterType((*MsgChangePartyAddress)(nil), "rarimo.rarimocore.rarimocore.MsgChangePartyAddress")
	proto.RegisterType((*MsgChangePartyAddressResponse)(nil), "rarimo.rarimocore.rarimocore.MsgChangePartyAddressResponse")
	proto.RegisterType((*MsgResignOperation)(nil), "rarimo.rarimocore.rarimocore.MsgResignOperation")
	proto.RegisterType((*MsgResignOperationResponse)(nil), "rarimo.rarimocore.rarimocore.MsgResignOperationResponse")
	proto.RegisterType((*MsgVote)(nil), "rarimo.rarimocore.rarimocore.MsgVote")
	proto.RegisterType((*MsgVoteResponse)(nil), "rarimo.rarimocore.rarimocore.MsgVoteResponse")
}

func init() { proto.RegisterFile("rarimocore/tx.proto", fileDescriptor_d9dffb74ddf0d475) }

var fileDescriptor_d9dffb74ddf0d475 = []byte{
	// 844 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0xce, 0xd8, 0x26, 0xd9, 0x54, 0x96, 0xac, 0xe8, 0xd5, 0x92, 0x61, 0x70, 0x86, 0x68, 0x80,
	0x28, 0x48, 0xc4, 0x5e, 0xb2, 0x02, 0x01, 0x2b, 0x7e, 0x16, 0x2f, 0x87, 0x80, 0xac, 0x84, 0xf1,
	0x8a, 0x03, 0xe2, 0xd2, 0xb6, 0x2b, 0xb3, 0x23, 0x3c, 0xdd, 0xa3, 0x9e, 0x76, 0x6c, 0x1f, 0xf6,
	0xca, 0x9e, 0x90, 0x38, 0xf1, 0x22, 0xbc, 0x04, 0xc7, 0x3d, 0x70, 0xe0, 0x88, 0x92, 0x17, 0x59,
	0x75, 0xbb, 0x67, 0x3c, 0xfe, 0xc9, 0x64, 0x92, 0x93, 0xdd, 0x5f, 0xd5, 0x57, 0xf5, 0xd5, 0x54,
	0x55, 0xab, 0xe1, 0xbe, 0xa0, 0x22, 0x8c, 0x78, 0x8f, 0x0b, 0x6c, 0xca, 0x71, 0x23, 0x16, 0x5c,
	0x72, 0x52, 0x9f, 0x82, 0x8d, 0x99, 0x2d, 0xf7, 0xd7, 0x71, 0x72, 0x14, 0x1e, 0xa3, 0xa0, 0x32,
	0xe4, 0x6c, 0xca, 0x74, 0x76, 0x73, 0xb6, 0x1e, 0x67, 0x67, 0xa1, 0x88, 0xf2, 0xe6, 0x1d, 0xc9,
	0x7f, 0x43, 0x16, 0x51, 0x46, 0x03, 0x14, 0xcd, 0x50, 0x62, 0x94, 0x1a, 0x72, 0xbc, 0x98, 0x0a,
	0x1a, 0x25, 0xc6, 0xf0, 0x20, 0x67, 0x38, 0xe7, 0x12, 0xa7, 0xb0, 0xf7, 0x6f, 0x15, 0xee, 0xb7,
	0x93, 0xa0, 0x25, 0x90, 0x4a, 0x7c, 0x26, 0x28, 0x4b, 0xce, 0x50, 0x9c, 0xc4, 0xc4, 0x86, 0x8d,
	0x9e, 0xc2, 0xb8, 0xb0, 0xad, 0x3d, 0xeb, 0x60, 0xd3, 0x4f, 0x8f, 0x64, 0x1b, 0x2a, 0x72, 0x6c,
	0x57, 0x34, 0x58, 0x91, 0x63, 0xe5, 0x89, 0xe7, 0xc8, 0xe4, 0x71, 0xdf, 0xae, 0x4e, 0x3d, 0xcd,
	0x91, 0x38, 0x70, 0x47, 0x60, 0x0f, 0xc3, 0x73, 0x14, 0x76, 0x4d, 0x9b, 0xb2, 0x33, 0x79, 0x1b,
	0xd6, 0x69, 0xc4, 0x87, 0x4c, 0xda, 0x6f, 0x68, 0x8b, 0x39, 0x11, 0x17, 0xa0, 0x3b, 0x64, 0xfd,
	0x01, 0x3e, 0xa5, 0x92, 0xda, 0xeb, 0xda, 0x96, 0x43, 0x66, 0xf6, 0x0e, 0x1d, 0x48, 0x7b, 0x23,
	0x6f, 0x57, 0x08, 0x69, 0x41, 0xed, 0x4c, 0xf0, 0xc8, 0xbe, 0xb3, 0x67, 0x1d, 0x6c, 0x1d, 0x35,
	0x1b, 0xcb, 0x0d, 0xc8, 0x7f, 0xb9, 0xc6, 0xb1, 0xc4, 0xa8, 0xf5, 0x9c, 0x86, 0xec, 0x54, 0x7f,
	0x2b, 0x5f, 0x93, 0xc9, 0x37, 0x50, 0x91, 0xdc, 0xde, 0xbc, 0x5d, 0x88, 0x8a, 0xe4, 0xe4, 0x2b,
	0xa8, 0xa9, 0x9e, 0xd8, 0xa0, 0x43, 0x7c, 0x54, 0x26, 0xc4, 0x31, 0xeb, 0xe3, 0xd8, 0xd7, 0x34,
	0xf2, 0x2d, 0xd4, 0x22, 0x94, 0xd4, 0xde, 0xd2, 0xf4, 0x8f, 0xcb, 0xd0, 0xdb, 0x28, 0x69, 0x9f,
	0x4a, 0xea, 0x6b, 0xa6, 0xb7, 0x0b, 0xef, 0xae, 0xe8, 0xaa, 0x8f, 0x49, 0xcc, 0x59, 0x82, 0xde,
	0x4b, 0x0b, 0x1e, 0x64, 0xf6, 0x56, 0x6e, 0xbc, 0x0a, 0xfa, 0x4e, 0xa0, 0x26, 0x38, 0x97, 0xa6,
	0xf3, 0xfa, 0xbf, 0xf2, 0x0e, 0x95, 0x6e, 0x4c, 0xec, 0xea, 0x5e, 0x55, 0x79, 0x9b, 0x23, 0xd9,
	0x87, 0xed, 0x24, 0x0c, 0x18, 0x95, 0x43, 0x81, 0xdf, 0xb7, 0x9e, 0x76, 0x9e, 0x98, 0x09, 0x58,
	0x40, 0xbd, 0xf7, 0x60, 0x77, 0xa5, 0x90, 0x4c, 0xea, 0xdf, 0x16, 0xd8, 0x33, 0x8f, 0xe7, 0x94,
	0x05, 0x78, 0x4a, 0x85, 0x0c, 0x31, 0x29, 0x9c, 0xd2, 0xc7, 0xb0, 0xce, 0x70, 0xd4, 0x41, 0xa5,
	0xb7, 0x7a, 0xb0, 0x75, 0xf4, 0x7e, 0xa3, 0x68, 0x15, 0x1b, 0x2a, 0xe4, 0xc4, 0x37, 0x14, 0xe2,
	0xc1, 0x5d, 0x86, 0xa3, 0xd3, 0x61, 0x77, 0x10, 0xf6, 0x7e, 0xc4, 0x89, 0x99, 0xeb, 0x39, 0x8c,
	0xd4, 0x61, 0x33, 0x2b, 0xc5, 0xd4, 0x36, 0x03, 0x3c, 0x0f, 0xf6, 0xae, 0x12, 0x9d, 0x55, 0x36,
	0x82, 0x7b, 0xed, 0x24, 0xe8, 0xa0, 0x1c, 0xc6, 0xc7, 0x2c, 0x94, 0x21, 0x1d, 0x14, 0xd4, 0xb3,
	0x0f, 0xdb, 0xb1, 0xd2, 0x38, 0x13, 0x35, 0xed, 0xc3, 0x02, 0x5a, 0x46, 0xba, 0xf7, 0x0e, 0xec,
	0x2c, 0x24, 0xce, 0x34, 0xfd, 0x34, 0x9d, 0x8b, 0x4c, 0xf1, 0xe4, 0x49, 0xbf, 0x2f, 0x30, 0x49,
	0x0a, 0x94, 0xb9, 0x00, 0x0c, 0x47, 0xc6, 0xcf, 0xa8, 0xca, 0x21, 0x69, 0x87, 0x97, 0x42, 0x66,
	0x39, 0x19, 0x90, 0x76, 0x12, 0xf8, 0xa8, 0xbe, 0xde, 0x49, 0x7a, 0x0d, 0x16, 0x24, 0xfc, 0x00,
	0xde, 0xec, 0xe9, 0x68, 0x27, 0xb1, 0x5e, 0x1a, 0x93, 0x73, 0x1e, 0x54, 0x7c, 0x6e, 0xec, 0xe6,
	0x5a, 0x32, 0x47, 0xaf, 0x0e, 0xce, 0x72, 0xbe, 0x4c, 0xcd, 0x0b, 0xd8, 0x68, 0x27, 0xc1, 0xcf,
	0x5c, 0x62, 0x81, 0x84, 0x3a, 0x6c, 0x66, 0x17, 0xb6, 0x49, 0x3f, 0x03, 0xc8, 0x97, 0x50, 0x53,
	0x37, 0xac, 0xce, 0xbb, 0x7d, 0xb4, 0x5f, 0x3c, 0x79, 0x2a, 0xd3, 0xb3, 0x49, 0x8c, 0xbe, 0xe6,
	0x78, 0x6f, 0xe9, 0xa1, 0x50, 0x60, 0xaa, 0xe8, 0xe8, 0x8f, 0x0d, 0xa8, 0xb6, 0x93, 0x80, 0xbc,
	0xb4, 0x60, 0x67, 0x71, 0xa3, 0xd3, 0x94, 0x9f, 0x14, 0x27, 0x59, 0x71, 0x17, 0x38, 0x5f, 0xdc,
	0x98, 0x92, 0x2a, 0x22, 0x7f, 0x59, 0x50, 0x5f, 0x39, 0xdb, 0xa9, 0x9c, 0xcf, 0x4a, 0xc6, 0x5e,
	0xa0, 0x3b, 0x5f, 0xdf, 0x8e, 0x97, 0x09, 0xfb, 0xdd, 0x02, 0xb2, 0xe2, 0x52, 0x7b, 0x54, 0x36,
	0x6c, 0x8e, 0xe4, 0x3c, 0xbe, 0x05, 0x29, 0x13, 0x22, 0xe1, 0xee, 0xdc, 0x62, 0x1f, 0x5e, 0x1b,
	0x2c, 0xef, 0xee, 0x7c, 0x7a, 0x23, 0xf7, 0xf9, 0xf2, 0x97, 0x77, 0xb7, 0x44, 0xf9, 0x4b, 0xa4,
	0x32, 0xe5, 0x5f, 0xb9, 0xd2, 0xe4, 0x05, 0xdc, 0x5b, 0xdc, 0xe7, 0x87, 0xd7, 0xc6, 0x5b, 0x60,
	0x38, 0x9f, 0xdf, 0x94, 0x91, 0xa5, 0xff, 0x15, 0x6a, 0x7a, 0x81, 0x3f, 0xbc, 0x36, 0x82, 0x72,
	0x73, 0x0e, 0x4b, 0xb9, 0xa5, 0xd1, 0xbf, 0xfb, 0xe1, 0x9f, 0x0b, 0xd7, 0x7a, 0x75, 0xe1, 0x5a,
	0xff, 0x5f, 0xb8, 0xd6, 0x9f, 0x97, 0xee, 0xda, 0xab, 0x4b, 0x77, 0xed, 0xbf, 0x4b, 0x77, 0xed,
	0x97, 0x87, 0x41, 0x28, 0x07, 0xb4, 0xdb, 0xe8, 0xf1, 0xa8, 0x39, 0x0d, 0x60, 0x7e, 0x0e, 0xf5,
	0xb3, 0x6b, 0xdc, 0xcc, 0xbf, 0x11, 0x27, 0x31, 0x26, 0xdd, 0x75, 0xfd, 0x0a, 0x7b, 0xf4, 0x3a,
	0x00, 0x00, 0xff, 0xff, 0x3e, 0x25, 0xa4, 0xa4, 0x3e, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateTransferOperation(ctx context.Context, in *MsgCreateTransferOp, opts ...grpc.CallOption) (*MsgCreateTransferOpResponse, error)
	CreateChangePartiesOperation(ctx context.Context, in *MsgCreateChangePartiesOp, opts ...grpc.CallOption) (*MsgCreateChangePartiesOpResponse, error)
	CreateConfirmation(ctx context.Context, in *MsgCreateConfirmation, opts ...grpc.CallOption) (*MsgCreateConfirmationResponse, error)
	SetupInitial(ctx context.Context, in *MsgSetupInitial, opts ...grpc.CallOption) (*MsgSetupInitialResponse, error)
	ChangePartyAddress(ctx context.Context, in *MsgChangePartyAddress, opts ...grpc.CallOption) (*MsgChangePartyAddressResponse, error)
	ResignOperation(ctx context.Context, in *MsgResignOperation, opts ...grpc.CallOption) (*MsgResignOperationResponse, error)
	Vote(ctx context.Context, in *MsgVote, opts ...grpc.CallOption) (*MsgVoteResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateTransferOperation(ctx context.Context, in *MsgCreateTransferOp, opts ...grpc.CallOption) (*MsgCreateTransferOpResponse, error) {
	out := new(MsgCreateTransferOpResponse)
	err := c.cc.Invoke(ctx, "/rarimo.rarimocore.rarimocore.Msg/CreateTransferOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateChangePartiesOperation(ctx context.Context, in *MsgCreateChangePartiesOp, opts ...grpc.CallOption) (*MsgCreateChangePartiesOpResponse, error) {
	out := new(MsgCreateChangePartiesOpResponse)
	err := c.cc.Invoke(ctx, "/rarimo.rarimocore.rarimocore.Msg/CreateChangePartiesOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateConfirmation(ctx context.Context, in *MsgCreateConfirmation, opts ...grpc.CallOption) (*MsgCreateConfirmationResponse, error) {
	out := new(MsgCreateConfirmationResponse)
	err := c.cc.Invoke(ctx, "/rarimo.rarimocore.rarimocore.Msg/CreateConfirmation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetupInitial(ctx context.Context, in *MsgSetupInitial, opts ...grpc.CallOption) (*MsgSetupInitialResponse, error) {
	out := new(MsgSetupInitialResponse)
	err := c.cc.Invoke(ctx, "/rarimo.rarimocore.rarimocore.Msg/SetupInitial", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ChangePartyAddress(ctx context.Context, in *MsgChangePartyAddress, opts ...grpc.CallOption) (*MsgChangePartyAddressResponse, error) {
	out := new(MsgChangePartyAddressResponse)
	err := c.cc.Invoke(ctx, "/rarimo.rarimocore.rarimocore.Msg/ChangePartyAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ResignOperation(ctx context.Context, in *MsgResignOperation, opts ...grpc.CallOption) (*MsgResignOperationResponse, error) {
	out := new(MsgResignOperationResponse)
	err := c.cc.Invoke(ctx, "/rarimo.rarimocore.rarimocore.Msg/ResignOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Vote(ctx context.Context, in *MsgVote, opts ...grpc.CallOption) (*MsgVoteResponse, error) {
	out := new(MsgVoteResponse)
	err := c.cc.Invoke(ctx, "/rarimo.rarimocore.rarimocore.Msg/Vote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateTransferOperation(context.Context, *MsgCreateTransferOp) (*MsgCreateTransferOpResponse, error)
	CreateChangePartiesOperation(context.Context, *MsgCreateChangePartiesOp) (*MsgCreateChangePartiesOpResponse, error)
	CreateConfirmation(context.Context, *MsgCreateConfirmation) (*MsgCreateConfirmationResponse, error)
	SetupInitial(context.Context, *MsgSetupInitial) (*MsgSetupInitialResponse, error)
	ChangePartyAddress(context.Context, *MsgChangePartyAddress) (*MsgChangePartyAddressResponse, error)
	ResignOperation(context.Context, *MsgResignOperation) (*MsgResignOperationResponse, error)
	Vote(context.Context, *MsgVote) (*MsgVoteResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateTransferOperation(ctx context.Context, req *MsgCreateTransferOp) (*MsgCreateTransferOpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransferOperation not implemented")
}
func (*UnimplementedMsgServer) CreateChangePartiesOperation(ctx context.Context, req *MsgCreateChangePartiesOp) (*MsgCreateChangePartiesOpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChangePartiesOperation not implemented")
}
func (*UnimplementedMsgServer) CreateConfirmation(ctx context.Context, req *MsgCreateConfirmation) (*MsgCreateConfirmationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateConfirmation not implemented")
}
func (*UnimplementedMsgServer) SetupInitial(ctx context.Context, req *MsgSetupInitial) (*MsgSetupInitialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupInitial not implemented")
}
func (*UnimplementedMsgServer) ChangePartyAddress(ctx context.Context, req *MsgChangePartyAddress) (*MsgChangePartyAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePartyAddress not implemented")
}
func (*UnimplementedMsgServer) ResignOperation(ctx context.Context, req *MsgResignOperation) (*MsgResignOperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResignOperation not implemented")
}
func (*UnimplementedMsgServer) Vote(ctx context.Context, req *MsgVote) (*MsgVoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Vote not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateTransferOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTransferOp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTransferOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rarimo.rarimocore.rarimocore.Msg/CreateTransferOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTransferOperation(ctx, req.(*MsgCreateTransferOp))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateChangePartiesOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateChangePartiesOp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateChangePartiesOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rarimo.rarimocore.rarimocore.Msg/CreateChangePartiesOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateChangePartiesOperation(ctx, req.(*MsgCreateChangePartiesOp))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateConfirmation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateConfirmation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateConfirmation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rarimo.rarimocore.rarimocore.Msg/CreateConfirmation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateConfirmation(ctx, req.(*MsgCreateConfirmation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetupInitial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetupInitial)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetupInitial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rarimo.rarimocore.rarimocore.Msg/SetupInitial",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetupInitial(ctx, req.(*MsgSetupInitial))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ChangePartyAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgChangePartyAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ChangePartyAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rarimo.rarimocore.rarimocore.Msg/ChangePartyAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ChangePartyAddress(ctx, req.(*MsgChangePartyAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ResignOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgResignOperation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ResignOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rarimo.rarimocore.rarimocore.Msg/ResignOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ResignOperation(ctx, req.(*MsgResignOperation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Vote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVote)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Vote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rarimo.rarimocore.rarimocore.Msg/Vote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Vote(ctx, req.(*MsgVote))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rarimo.rarimocore.rarimocore.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTransferOperation",
			Handler:    _Msg_CreateTransferOperation_Handler,
		},
		{
			MethodName: "CreateChangePartiesOperation",
			Handler:    _Msg_CreateChangePartiesOperation_Handler,
		},
		{
			MethodName: "CreateConfirmation",
			Handler:    _Msg_CreateConfirmation_Handler,
		},
		{
			MethodName: "SetupInitial",
			Handler:    _Msg_SetupInitial_Handler,
		},
		{
			MethodName: "ChangePartyAddress",
			Handler:    _Msg_ChangePartyAddress_Handler,
		},
		{
			MethodName: "ResignOperation",
			Handler:    _Msg_ResignOperation_Handler,
		},
		{
			MethodName: "Vote",
			Handler:    _Msg_Vote_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rarimocore/tx.proto",
}

func (m *MsgCreateTransferOp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransferOp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransferOp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Meta != nil {
		{
			size, err := m.Meta.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.Item != nil {
		{
			size, err := m.Item.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.To != nil {
		{
			size, err := m.To.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.From != nil {
		{
			size, err := m.From.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if len(m.BundleSalt) > 0 {
		i -= len(m.BundleSalt)
		copy(dAtA[i:], m.BundleSalt)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BundleSalt)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.BundleData) > 0 {
		i -= len(m.BundleData)
		copy(dAtA[i:], m.BundleData)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BundleData)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.EventId) > 0 {
		i -= len(m.EventId)
		copy(dAtA[i:], m.EventId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EventId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Tx) > 0 {
		i -= len(m.Tx)
		copy(dAtA[i:], m.Tx)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Tx)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransferOpResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransferOpResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransferOpResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateConfirmation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateConfirmation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateConfirmation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SignatureECDSA) > 0 {
		i -= len(m.SignatureECDSA)
		copy(dAtA[i:], m.SignatureECDSA)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SignatureECDSA)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Indexes) > 0 {
		for iNdEx := len(m.Indexes) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Indexes[iNdEx])
			copy(dAtA[i:], m.Indexes[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Indexes[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Root) > 0 {
		i -= len(m.Root)
		copy(dAtA[i:], m.Root)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Root)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateConfirmationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateConfirmationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateConfirmationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateChangePartiesOp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateChangePartiesOp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateChangePartiesOp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signature) > 0 {
		i -= len(m.Signature)
		copy(dAtA[i:], m.Signature)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signature)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.NewPublicKey) > 0 {
		i -= len(m.NewPublicKey)
		copy(dAtA[i:], m.NewPublicKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewPublicKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NewSet) > 0 {
		for iNdEx := len(m.NewSet) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NewSet[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateChangePartiesOpResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateChangePartiesOpResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateChangePartiesOpResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetupInitial) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetupInitial) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetupInitial) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewPublicKey) > 0 {
		i -= len(m.NewPublicKey)
		copy(dAtA[i:], m.NewPublicKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewPublicKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PartyPublicKey) > 0 {
		i -= len(m.PartyPublicKey)
		copy(dAtA[i:], m.PartyPublicKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PartyPublicKey)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetupInitialResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetupInitialResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetupInitialResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgChangePartyAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgChangePartyAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgChangePartyAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewAddress) > 0 {
		i -= len(m.NewAddress)
		copy(dAtA[i:], m.NewAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgChangePartyAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgChangePartyAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgChangePartyAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgResignOperation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgResignOperation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgResignOperation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OpIndex) > 0 {
		i -= len(m.OpIndex)
		copy(dAtA[i:], m.OpIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OpIndex)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ChangeOpIndex) > 0 {
		i -= len(m.ChangeOpIndex)
		copy(dAtA[i:], m.ChangeOpIndex)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChangeOpIndex)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgResignOperationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgResignOperationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgResignOperationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgVote) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVote) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVote) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Vote != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Vote))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Operation) > 0 {
		i -= len(m.Operation)
		copy(dAtA[i:], m.Operation)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Operation)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgVoteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateTransferOp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Tx)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EventId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BundleData)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BundleSalt)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.From != nil {
		l = m.From.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.To != nil {
		l = m.To.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Item != nil {
		l = m.Item.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Meta != nil {
		l = m.Meta.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTransferOpResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateConfirmation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Root)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Indexes) > 0 {
		for _, s := range m.Indexes {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.SignatureECDSA)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateConfirmationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateChangePartiesOp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.NewSet) > 0 {
		for _, e := range m.NewSet {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.NewPublicKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signature)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateChangePartiesOpResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetupInitial) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PartyPublicKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewPublicKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetupInitialResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgChangePartyAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgChangePartyAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgResignOperation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChangeOpIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OpIndex)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgResignOperationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgVote) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Operation)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Vote != 0 {
		n += 1 + sovTx(uint64(m.Vote))
	}
	return n
}

func (m *MsgVoteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateTransferOp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransferOp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransferOp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tx", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tx = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EventId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BundleData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BundleData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BundleSalt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BundleSalt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.From == nil {
				m.From = &types.ItemChainParams{}
			}
			if err := m.From.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field To", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.To == nil {
				m.To = &types.ItemChainParams{}
			}
			if err := m.To.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Item == nil {
				m.Item = &types.ItemIndex{}
			}
			if err := m.Item.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Meta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Meta == nil {
				m.Meta = &types.ItemMetadata{}
			}
			if err := m.Meta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransferOpResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransferOpResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransferOpResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateConfirmation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateConfirmation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateConfirmation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Root", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Root = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Indexes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Indexes = append(m.Indexes, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignatureECDSA", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SignatureECDSA = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateConfirmationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateConfirmationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateConfirmationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateChangePartiesOp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateChangePartiesOp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateChangePartiesOp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewSet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewSet = append(m.NewSet, &Party{})
			if err := m.NewSet[len(m.NewSet)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewPublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewPublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signature = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateChangePartiesOpResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateChangePartiesOpResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateChangePartiesOpResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetupInitial) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetupInitial: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetupInitial: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PartyPublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PartyPublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewPublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewPublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetupInitialResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetupInitialResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetupInitialResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgChangePartyAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgChangePartyAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgChangePartyAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgChangePartyAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgChangePartyAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgChangePartyAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgResignOperation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgResignOperation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgResignOperation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeOpIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChangeOpIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgResignOperationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgResignOperationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgResignOperationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVote) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVote: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVote: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Operation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Operation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vote", wireType)
			}
			m.Vote = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Vote |= VoteType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
